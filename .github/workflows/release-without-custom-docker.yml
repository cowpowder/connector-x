name: aarch64-test

on:
  push:

jobs:
 linux-cross:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [aarch64, armv7, s390x, ppc64le, ppc64]
          
    steps:
      - uses: actions/checkout@v4

      - name: Set swap space for Linux
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 10

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.9

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          manylinux: auto
          args: --release --out dist -m connectorx-python/Cargo.toml

      - uses: uraimo/run-on-arch-action@v2.8.1
        if: matrix.target != 'ppc64'
        name: Install built wheel
        with:
          arch: ${{ matrix.target }}
          distro: ubuntu20.04
          githubToken: ${{ github.token }}
          install: |
            apt-get update
            apt-get install -y --no-install-recommends python3 python3-pip
            pip3 install -U pip
          run: |
            pip3 install crfs --no-index --find-links dist/ --force-reinstall
            python3 -c "import crfs"
      # - name: Build wheel
      #   uses: PyO3/maturin-action@v1
      #   with:
      #     manylinux: 2_24
      #     target: aarch64-unknown-linux-gnu
      #     command: build
      #     args: -m connectorx-python/Cargo.toml -i python3.9 --release
      #     before-script-linux: |
      #       apt-get update -y
      #       apt-get install -y libssl-dev openssl pkg-config libkrb5-dev gcc-multilib libcurl4-openssl-dev zlib1g-dev

      #   env:
      #     SQLITE3_STATIC: 1

      # - name: Copy j4rs dependencies into dist
      #   run: |
      #     cp -rf connectorx-python/target/release/jassets connectorx-python/connectorx/dependencies

      # # rebuild the wheel to incorporate j4rs dependencies
      # - name: Build wheel
      #   uses: PyO3/maturin-action@v1
      #   with:
      #     manylinux: 2_24
      #     target: aarch64-unknown-linux-gnu
      #     rust-toolchain: 1.71.1
      #     command: build
      #     args: -m connectorx-python/Cargo.toml -i python3.9 --release
      #   env:
      #     SQLITE3_STATIC: 1

      - uses: actions/upload-artifact@v3
        with:
          name: "aarch-test"
          path: connectorx-python/target/wheels/*.whl