name: release

on:
  push:

jobs:
  linux-aarch:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
        # python-version: ["3.9", "3.10", "3.11", "3.12"]
  
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '${{ matrix.python-version }}'

      - name: Check python installation
        run: |
          python --version
          which python

      - name: Set python version
        run: |
          echo "/opt/python/cp${{ matrix.python-version[0] }}-cp${{ matrix.python-version[0] }}/bin" >> $GITHUB_PATH

      # Setup QEMU for cross-compilation
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1

      # Use the aarch64 manylinux container
      - name: Use manylinux aarch64 container
        container: quay.io/pypa/manylinux2014_aarch64
        run: echo "Running in aarch64 container"

      # Install system dependencies for aarch64
      - name: Install system dependencies
        run: |
          yum install -y openssl11-devel mysql-devel postgresql-devel freetds-devel

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
          target: aarch64-unknown-linux
          default: true

      - uses: extractions/setup-just@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: Gr1N/setup-poetry@v9

      - name: Setup project
        run: |
          just bootstrap-python
    
      - uses: PyO3/maturin-action@v1
        with:
          rust-manylinux: 2_28
          command: build
          target: aarch64
          args: -m connectorx-python/Cargo.toml -i python${{ matrix.python-version }} --release --features integrated-auth-gssapi
          before-script-linux: |
            apt-get update -y
            apt-get install -y libssl-dev openssl pkg-config libkrb5-dev libgssapi-krb5-2 gcc-aarch64-linux-gnu

        env:
          SQLITE3_STATIC: 1
          

      - name: Copy j4rs dependencies into dist
        run: |
          cp -rf connectorx-python/target/release/jassets connectorx-python/connectorx/dependencies

      # Rebuild the wheel after copying dependencies
      - uses: PyO3/maturin-action@v1
        with:
          manylinux: 2_28
          target: aarch64
          args: -m connectorx-python/Cargo.toml -i python${{ matrix.python-version }} --release --features integrated-auth-gssapi
          before-script-linux: |
              apt-get update -y
              apt-get install -y libssl-dev openssl pkg-config libkrb5-dev gcc-multilib libgssapi-krb5-2
              export LD_LIBRARY_PATH=/usr/lib/aarch64-linux-gnu:$LD_LIBRARY_PATH

      - uses: actions/upload-artifact@v3
        with:
          name: "aarch-${{ matrix.python-version[1] }}"
          path: connectorx-python/target/wheels/*.whl
