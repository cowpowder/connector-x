name: release

on:
  push:

jobs:
  linux-aarch-create-sdist:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # Avoid potential out-of-memory errors
      - name: Set swap space for Linux
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 10
    
      - uses: extractions/setup-just@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: Gr1N/setup-poetry@v9

      - name: Setup project
        run: |
          just bootstrap-python
    
      - name: Create source distribution
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: >
            --manifest-path connectorx-python/Cargo.toml
            --out dist

      - name: Test sdist
        run: |
          pip install --force-reinstall --verbose dist/*.tar.gz
          python -c 'import connectorx'

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist-connectorx
          path: dist/*.tar.gz

  build-wheels:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: False
      matrix:
        python-version: ["3.10"]
        os: [ubuntu-latest]
        architecture: [aarch64]

    steps:
      - uses: actions/checkout@v4

      - name: Set swap space for Linux
        if: matrix.os == 'ubuntu-latest'
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 10

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Build wheel
        uses: PyO3/maturin-action@v1
        with:
          command: build
          target: aarch64-unknown-linux-gnu
          args: >
            --profile dist-release
            --manifest-path connectorx-python/Cargo.toml
            --out dist
          manylinux: ${{ matrix.architecture == 'aarch64' && '2_24' || 'auto' }}

  verify:
    runs-on: ubuntu-latest
    needs: [build-wheels]
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '${{ matrix.python-version }}'

      - uses: actions/download-artifact@v4
        with:
          name: "${{ matrix.os }}-${{ matrix.python-version }}"

      - run: |
          pip install *.whl
          python -c "import connectorx"

  # upload:
  #   runs-on: ubuntu-latest
  #   needs: [verify]
  #   steps:
  #     - name: Download all artifacts
  #       uses: actions/download-artifact@v4

  #     - name: Setup environment
  #       run: |
  #         tree .
  #         echo "/home/runner/.local/bin" >> $GITHUB_PATH

  #     - name: Install Twine
  #       run: pip install twine

  #     - name: Upload to PyPI site
  #       if: github.ref == 'refs/heads/release'
  #       env:
  #         PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
  #       run: |
  #         for file in $(ls **/*)
  #         do
  #           twine upload --non-interactive -u __token__ -p $PYPI_TOKEN $file || continue
  #         done

  #     - name: Upload to PyPI test site
  #       if: github.ref == 'refs/heads/prerelease'
  #       env:
  #         PYPI_TEST_TOKEN: ${{ secrets.PYPI_TEST_TOKEN }}
  #       run: |
  #         for file in $(ls **/*)
  #         do
  #           twine upload --non-interactive --repository-url https://test.pypi.org/legacy/ -u __token__ -p $PYPI_TEST_TOKEN $file --verbose || continue
  #         done