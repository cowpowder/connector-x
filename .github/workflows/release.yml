name: release


on: 
  push:
    branches:
      - main

jobs:
  linux-aarch:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.10", "3.11"] 

    steps:
      - name: Check out code
        uses: actions/checkout@v2
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/arm64

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v2


      - name: check path
        run: |
          ls -ltRa .

      - name: Build Docker Image
        run: |
          docker buildx create --use
          docker buildx build --platform linux/arm64 \
            --build-arg PYTHON_VERSION=${{ matrix.python-version }}  \
            -f Dockerfile.aarch64 \
            -t connectorx-python-aarch64:latest \
            --load .

      - name: Run Docker container
        id: run_container
        run: |
          docker run -d --name connectorx-container connectorx-python-aarch64:latest
          sleep 10

      - name: Copy .whl files from container
        run: |
          mkdir wheels
          docker cp connectorx-container:/workspace/connector-x/connectorx-python/target/wheels/. wheels/

      - name: Checky check
        run: |
          ls -ltRa wheels

      - name: Stop and remove Docker container
        run: |
          docker stop connectorx-container
          docker rm connectorx-container

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: built-artifacts
          path: wheels/*.whl  # Adjust the path to where Maturin outputs the wheel files

      # - name: Build wheel
      #   uses: PyO3/maturin-action@v1
      #   with:
      #     command: build
      #     manylinux: 2_24
      #     target: aarch64-unknown-linux-gnu
      #     args: >
      #       -i python${{ matrix.python-version }}
      #       --manifest-path connectorx-python/Cargo.toml
      #       --features integrated-auth-gssapi
      #       --out dist
      #     before-script-linux: |
      #       apt-get update -y
      #       dpkg --add-architecture aarch64
      #       apt-get install -y libgssapi-krb5-2 libkrb5-dev gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

  verify:
    runs-on: ubuntu-latest
    needs: [linux-aarch]
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '${{ matrix.python-version }}'

      - uses: actions/download-artifact@v4
        with:
          name: "${{ matrix.os }}-${{ matrix.python-version }}"

      - run: |
          ls -ltRa
          pip install *.whl
          python -c "import connectorx"

  # upload:
  #   runs-on: ubuntu-latest
  #   needs: [verify]
  #   steps:
  #     - name: Download all artifacts
  #       uses: actions/download-artifact@v4

  #     - name: Setup environment
  #       run: |
  #         tree .
  #         echo "/home/runner/.local/bin" >> $GITHUB_PATH

  #     - name: Install Twine
  #       run: pip install twine

  #     - name: Upload to PyPI site
  #       if: github.ref == 'refs/heads/release'
  #       env:
  #         PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
  #       run: |
  #         for file in $(ls **/*)
  #         do
  #           twine upload --non-interactive -u __token__ -p $PYPI_TOKEN $file || continue
  #         done

  #     - name: Upload to PyPI test site
  #       if: github.ref == 'refs/heads/prerelease'
  #       env:
  #         PYPI_TEST_TOKEN: ${{ secrets.PYPI_TEST_TOKEN }}
  #       run: |
  #         for file in $(ls **/*)
  #         do
  #           twine upload --non-interactive --repository-url https://test.pypi.org/legacy/ -u __token__ -p $PYPI_TEST_TOKEN $file --verbose || continue
  #         done