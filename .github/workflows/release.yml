name: release

on:
  push:

jobs:
  linux-aarch:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: False
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v4

      - name: Set swap space for Linux
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 10

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1

      - name: Pull manylinux AArch64 Docker image
        run: |
          docker pull quay.io/pypa/manylinux_2_24_aarch64

      - name: Prepare Python version without dots
        run: |
          PYTHON_VERSION_NO_DOTS=$(echo "${{ matrix.python-version }}" | tr -d '.')
          echo "PYTHON_VERSION_NO_DOTS=$PYTHON_VERSION_NO_DOTS" >> $GITHUB_ENV

      - name: Build wheel in manylinux AArch64 Docker container
        run: |
          docker run --rm -v $(pwd):/io quay.io/pypa/manylinux_2_24_aarch64 /bin/bash -c "
          yum install -y libgssapi-krb5-devel krb5-devel openssl-devel
          /opt/python/cp${{ env.PYTHON_VERSION_NO_DOTS }}-cp${{ env.PYTHON_VERSION_NO_DOTS }}m/bin/python -m pip install maturin
          maturin build --manifest-path connectorx-python/Cargo.toml --release --target aarch64-unknown-linux-gnu
          cp target/aarch64-unknown-linux-gnu/release/*.whl /io/dist/
          "

      # - name: Build wheel
      #   uses: PyO3/maturin-action@v1
      #   with:
      #     command: build
      #     manylinux: 2_24
      #     target: aarch64-unknown-linux-gnu
      #     args: >
      #       -i python${{ matrix.python-version }}
      #       --manifest-path connectorx-python/Cargo.toml
      #       --features integrated-auth-gssapi
      #       --out dist
      #     before-script-linux: |
      #       apt-get update -y
      #       dpkg --add-architecture aarch64
      #       apt-get install -y libgssapi-krb5-2 libkrb5-dev gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

  verify:
    runs-on: ubuntu-latest
    needs: [linux-aarch]
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '${{ matrix.python-version }}'

      - uses: actions/download-artifact@v4
        with:
          name: "${{ matrix.os }}-${{ matrix.python-version }}"

      - run: |
          pip install *.whl
          python -c "import connectorx"

  # upload:
  #   runs-on: ubuntu-latest
  #   needs: [verify]
  #   steps:
  #     - name: Download all artifacts
  #       uses: actions/download-artifact@v4

  #     - name: Setup environment
  #       run: |
  #         tree .
  #         echo "/home/runner/.local/bin" >> $GITHUB_PATH

  #     - name: Install Twine
  #       run: pip install twine

  #     - name: Upload to PyPI site
  #       if: github.ref == 'refs/heads/release'
  #       env:
  #         PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
  #       run: |
  #         for file in $(ls **/*)
  #         do
  #           twine upload --non-interactive -u __token__ -p $PYPI_TOKEN $file || continue
  #         done

  #     - name: Upload to PyPI test site
  #       if: github.ref == 'refs/heads/prerelease'
  #       env:
  #         PYPI_TEST_TOKEN: ${{ secrets.PYPI_TEST_TOKEN }}
  #       run: |
  #         for file in $(ls **/*)
  #         do
  #           twine upload --non-interactive --repository-url https://test.pypi.org/legacy/ -u __token__ -p $PYPI_TEST_TOKEN $file --verbose || continue
  #         done